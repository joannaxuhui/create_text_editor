[
  {
    "timestamp": "2016-02-13 13:56:59.821382", 
    "testcases": [
      {
        "log": "Attempt to write a line\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "writing_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Try to append to a line after writing\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Try to delete a line after writing\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "multiple_writing_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "overwriting_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "printf_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "printing_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Find a line after writing them\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "find_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Find multiple lines with a given key after writing them\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "find_test_multiple_exist", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Check for no memeory leaks\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "memory_check", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Loading in a file and check the contents\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "load_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Unknown autograder error when running test, please report to staff", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "saving_test", 
        "description": "DEFAULT DESCRIPTION"
      }
    ], 
    "revision": "{2016-02-15}"
  }, 
  {
    "timestamp": "2016-02-14 13:04:55.777793", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "writing_test", 
        "log": "Attempt to write a line\nTrying to compile your code...\nFAILED TO COMPILE!\neditor.c:14:12: error: redefinition of 'rec'\n     char* rec = strsep (& sentence);\n           ^\neditor.c:11:12: note: previous definition is here\n     char* rec = sentence;\n           ^\neditor.c:14:36: error: too few arguments provided to function-like macro invocation\n     char* rec = strsep (& sentence);\n                                   ^\n/usr/include/bits/string2.h:1262:11: note: macro 'strsep' defined here\n#  define strsep(s, reject) __strsep (s, reject)\n          ^\neditor.c:16:22: error: too many arguments to function call, expected 2, have 3\n     strcpy(com,rec, \"\\0\"));\n     ~~~~~~          ^~~~\neditor.c:42:34: error: expected ';' at end of declaration\n        char* com=strsep(&sentence,\"\\0\")\n                                        ^\n                                        ;\neditor.c:47:3: error: implicit declaration of function 'sresep' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n                sresep(&sentence,\"\\0\");\n                ^\neditor.c:47:3: note: did you mean 'strsep'?\n/usr/include/string.h:552:14: note: 'strsep' declared here\nextern char *strsep (char **__restrict __stringp,\n             ^\neditor.c:73:11: error: expected ';' after return statement\nreturn i<j:i,j;\n          ^\n          ;\neditor.c:76:12: error: expected ';' after return statement\n        return i>j:i,j;\n                  ^\n                  ;\neditor.c:88:12: error: incompatible pointer types passing 'size_t **' (aka 'unsigned long **') to parameter of type 'size_t *' (aka 'unsigned long *'); remove & [-Werror,-Wincompatible-pointer-types]\n        split(com,&line,copy);\n                  ^~~~~\neditor.c:10:31: note: passing argument to parameter 'line' here\nvoid split(char* com, size_t* line, char* sentence) {\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:813:29: note: expanded from macro 'strcmp'\n            && (__s2_len = strlen (s2), __s2_len < 4)                         \\\n                                   ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:815:33: note: expanded from macro 'strcmp'\n               ? __builtin_strcmp (s1, s2)                                    \\\n                                       ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:817:30: note: expanded from macro 'strcmp'\n            : __builtin_strcmp (s1, s2)))); })\n                                    ^\neditor.c:94:35: error: no member named 'Vector' in 'Document'; did you mean 'vector'?\n                for(size_t i = 0; i < document->Vector->size; i++)\n                                                ^~~~~~\n                                                vector\n./includes/document.h:5:26: note: 'vector' declared here\ntypedef struct { Vector *vector; } Document;\n                         ^\neditor.c:96:15: error: use of undeclared identifier 'documnet'; did you mean 'document'?\n                        print_line(documnet,i); //print them all\n                                   ^~~~~~~~\n                                   document\neditor.c:78:39: note: 'document' declared here\nvoid handle_display_command(Document *document, const char *command) {\n                                      ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/editor-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "append_test", 
        "log": "Try to append to a line after writing\nTrying to compile your code...\nFAILED TO COMPILE!\neditor.c:14:12: error: redefinition of 'rec'\n     char* rec = strsep (& sentence);\n           ^\neditor.c:11:12: note: previous definition is here\n     char* rec = sentence;\n           ^\neditor.c:14:36: error: too few arguments provided to function-like macro invocation\n     char* rec = strsep (& sentence);\n                                   ^\n/usr/include/bits/string2.h:1262:11: note: macro 'strsep' defined here\n#  define strsep(s, reject) __strsep (s, reject)\n          ^\neditor.c:16:22: error: too many arguments to function call, expected 2, have 3\n     strcpy(com,rec, \"\\0\"));\n     ~~~~~~          ^~~~\neditor.c:42:34: error: expected ';' at end of declaration\n        char* com=strsep(&sentence,\"\\0\")\n                                        ^\n                                        ;\neditor.c:47:3: error: implicit declaration of function 'sresep' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n                sresep(&sentence,\"\\0\");\n                ^\neditor.c:47:3: note: did you mean 'strsep'?\n/usr/include/string.h:552:14: note: 'strsep' declared here\nextern char *strsep (char **__restrict __stringp,\n             ^\neditor.c:73:11: error: expected ';' after return statement\nreturn i<j:i,j;\n          ^\n          ;\neditor.c:76:12: error: expected ';' after return statement\n        return i>j:i,j;\n                  ^\n                  ;\neditor.c:88:12: error: incompatible pointer types passing 'size_t **' (aka 'unsigned long **') to parameter of type 'size_t *' (aka 'unsigned long *'); remove & [-Werror,-Wincompatible-pointer-types]\n        split(com,&line,copy);\n                  ^~~~~\neditor.c:10:31: note: passing argument to parameter 'line' here\nvoid split(char* com, size_t* line, char* sentence) {\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:813:29: note: expanded from macro 'strcmp'\n            && (__s2_len = strlen (s2), __s2_len < 4)                         \\\n                                   ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:815:33: note: expanded from macro 'strcmp'\n               ? __builtin_strcmp (s1, s2)                                    \\\n                                       ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:817:30: note: expanded from macro 'strcmp'\n            : __builtin_strcmp (s1, s2)))); })\n                                    ^\neditor.c:94:35: error: no member named 'Vector' in 'Document'; did you mean 'vector'?\n                for(size_t i = 0; i < document->Vector->size; i++)\n                                                ^~~~~~\n                                                vector\n./includes/document.h:5:26: note: 'vector' declared here\ntypedef struct { Vector *vector; } Document;\n                         ^\neditor.c:96:15: error: use of undeclared identifier 'documnet'; did you mean 'document'?\n                        print_line(documnet,i); //print them all\n                                   ^~~~~~~~\n                                   document\neditor.c:78:39: note: 'document' declared here\nvoid handle_display_command(Document *document, const char *command) {\n                                      ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/editor-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "delete_test", 
        "log": "Try to delete a line after writing\nTrying to compile your code...\nFAILED TO COMPILE!\neditor.c:14:12: error: redefinition of 'rec'\n     char* rec = strsep (& sentence);\n           ^\neditor.c:11:12: note: previous definition is here\n     char* rec = sentence;\n           ^\neditor.c:14:36: error: too few arguments provided to function-like macro invocation\n     char* rec = strsep (& sentence);\n                                   ^\n/usr/include/bits/string2.h:1262:11: note: macro 'strsep' defined here\n#  define strsep(s, reject) __strsep (s, reject)\n          ^\neditor.c:16:22: error: too many arguments to function call, expected 2, have 3\n     strcpy(com,rec, \"\\0\"));\n     ~~~~~~          ^~~~\neditor.c:42:34: error: expected ';' at end of declaration\n        char* com=strsep(&sentence,\"\\0\")\n                                        ^\n                                        ;\neditor.c:47:3: error: implicit declaration of function 'sresep' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n                sresep(&sentence,\"\\0\");\n                ^\neditor.c:47:3: note: did you mean 'strsep'?\n/usr/include/string.h:552:14: note: 'strsep' declared here\nextern char *strsep (char **__restrict __stringp,\n             ^\neditor.c:73:11: error: expected ';' after return statement\nreturn i<j:i,j;\n          ^\n          ;\neditor.c:76:12: error: expected ';' after return statement\n        return i>j:i,j;\n                  ^\n                  ;\neditor.c:88:12: error: incompatible pointer types passing 'size_t **' (aka 'unsigned long **') to parameter of type 'size_t *' (aka 'unsigned long *'); remove & [-Werror,-Wincompatible-pointer-types]\n        split(com,&line,copy);\n                  ^~~~~\neditor.c:10:31: note: passing argument to parameter 'line' here\nvoid split(char* com, size_t* line, char* sentence) {\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:813:29: note: expanded from macro 'strcmp'\n            && (__s2_len = strlen (s2), __s2_len < 4)                         \\\n                                   ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:815:33: note: expanded from macro 'strcmp'\n               ? __builtin_strcmp (s1, s2)                                    \\\n                                       ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:817:30: note: expanded from macro 'strcmp'\n            : __builtin_strcmp (s1, s2)))); })\n                                    ^\neditor.c:94:35: error: no member named 'Vector' in 'Document'; did you mean 'vector'?\n                for(size_t i = 0; i < document->Vector->size; i++)\n                                                ^~~~~~\n                                                vector\n./includes/document.h:5:26: note: 'vector' declared here\ntypedef struct { Vector *vector; } Document;\n                         ^\neditor.c:96:15: error: use of undeclared identifier 'documnet'; did you mean 'document'?\n                        print_line(documnet,i); //print them all\n                                   ^~~~~~~~\n                                   document\neditor.c:78:39: note: 'document' declared here\nvoid handle_display_command(Document *document, const char *command) {\n                                      ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/editor-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "multiple_writing_test", 
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nFAILED TO COMPILE!\neditor.c:14:12: error: redefinition of 'rec'\n     char* rec = strsep (& sentence);\n           ^\neditor.c:11:12: note: previous definition is here\n     char* rec = sentence;\n           ^\neditor.c:14:36: error: too few arguments provided to function-like macro invocation\n     char* rec = strsep (& sentence);\n                                   ^\n/usr/include/bits/string2.h:1262:11: note: macro 'strsep' defined here\n#  define strsep(s, reject) __strsep (s, reject)\n          ^\neditor.c:16:22: error: too many arguments to function call, expected 2, have 3\n     strcpy(com,rec, \"\\0\"));\n     ~~~~~~          ^~~~\neditor.c:42:34: error: expected ';' at end of declaration\n        char* com=strsep(&sentence,\"\\0\")\n                                        ^\n                                        ;\neditor.c:47:3: error: implicit declaration of function 'sresep' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n                sresep(&sentence,\"\\0\");\n                ^\neditor.c:47:3: note: did you mean 'strsep'?\n/usr/include/string.h:552:14: note: 'strsep' declared here\nextern char *strsep (char **__restrict __stringp,\n             ^\neditor.c:73:11: error: expected ';' after return statement\nreturn i<j:i,j;\n          ^\n          ;\neditor.c:76:12: error: expected ';' after return statement\n        return i>j:i,j;\n                  ^\n                  ;\neditor.c:88:12: error: incompatible pointer types passing 'size_t **' (aka 'unsigned long **') to parameter of type 'size_t *' (aka 'unsigned long *'); remove & [-Werror,-Wincompatible-pointer-types]\n        split(com,&line,copy);\n                  ^~~~~\neditor.c:10:31: note: passing argument to parameter 'line' here\nvoid split(char* com, size_t* line, char* sentence) {\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:813:29: note: expanded from macro 'strcmp'\n            && (__s2_len = strlen (s2), __s2_len < 4)                         \\\n                                   ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:815:33: note: expanded from macro 'strcmp'\n               ? __builtin_strcmp (s1, s2)                                    \\\n                                       ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:817:30: note: expanded from macro 'strcmp'\n            : __builtin_strcmp (s1, s2)))); })\n                                    ^\neditor.c:94:35: error: no member named 'Vector' in 'Document'; did you mean 'vector'?\n                for(size_t i = 0; i < document->Vector->size; i++)\n                                                ^~~~~~\n                                                vector\n./includes/document.h:5:26: note: 'vector' declared here\ntypedef struct { Vector *vector; } Document;\n                         ^\neditor.c:96:15: error: use of undeclared identifier 'documnet'; did you mean 'document'?\n                        print_line(documnet,i); //print them all\n                                   ^~~~~~~~\n                                   document\neditor.c:78:39: note: 'document' declared here\nvoid handle_display_command(Document *document, const char *command) {\n                                      ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/editor-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "overwriting_test", 
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nFAILED TO COMPILE!\neditor.c:14:12: error: redefinition of 'rec'\n     char* rec = strsep (& sentence);\n           ^\neditor.c:11:12: note: previous definition is here\n     char* rec = sentence;\n           ^\neditor.c:14:36: error: too few arguments provided to function-like macro invocation\n     char* rec = strsep (& sentence);\n                                   ^\n/usr/include/bits/string2.h:1262:11: note: macro 'strsep' defined here\n#  define strsep(s, reject) __strsep (s, reject)\n          ^\neditor.c:16:22: error: too many arguments to function call, expected 2, have 3\n     strcpy(com,rec, \"\\0\"));\n     ~~~~~~          ^~~~\neditor.c:42:34: error: expected ';' at end of declaration\n        char* com=strsep(&sentence,\"\\0\")\n                                        ^\n                                        ;\neditor.c:47:3: error: implicit declaration of function 'sresep' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n                sresep(&sentence,\"\\0\");\n                ^\neditor.c:47:3: note: did you mean 'strsep'?\n/usr/include/string.h:552:14: note: 'strsep' declared here\nextern char *strsep (char **__restrict __stringp,\n             ^\neditor.c:73:11: error: expected ';' after return statement\nreturn i<j:i,j;\n          ^\n          ;\neditor.c:76:12: error: expected ';' after return statement\n        return i>j:i,j;\n                  ^\n                  ;\neditor.c:88:12: error: incompatible pointer types passing 'size_t **' (aka 'unsigned long **') to parameter of type 'size_t *' (aka 'unsigned long *'); remove & [-Werror,-Wincompatible-pointer-types]\n        split(com,&line,copy);\n                  ^~~~~\neditor.c:10:31: note: passing argument to parameter 'line' here\nvoid split(char* com, size_t* line, char* sentence) {\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:813:29: note: expanded from macro 'strcmp'\n            && (__s2_len = strlen (s2), __s2_len < 4)                         \\\n                                   ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:815:33: note: expanded from macro 'strcmp'\n               ? __builtin_strcmp (s1, s2)                                    \\\n                                       ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:817:30: note: expanded from macro 'strcmp'\n            : __builtin_strcmp (s1, s2)))); })\n                                    ^\neditor.c:94:35: error: no member named 'Vector' in 'Document'; did you mean 'vector'?\n                for(size_t i = 0; i < document->Vector->size; i++)\n                                                ^~~~~~\n                                                vector\n./includes/document.h:5:26: note: 'vector' declared here\ntypedef struct { Vector *vector; } Document;\n                         ^\neditor.c:96:15: error: use of undeclared identifier 'documnet'; did you mean 'document'?\n                        print_line(documnet,i); //print them all\n                                   ^~~~~~~~\n                                   document\neditor.c:78:39: note: 'document' declared here\nvoid handle_display_command(Document *document, const char *command) {\n                                      ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/editor-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "printf_test", 
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nFAILED TO COMPILE!\neditor.c:14:12: error: redefinition of 'rec'\n     char* rec = strsep (& sentence);\n           ^\neditor.c:11:12: note: previous definition is here\n     char* rec = sentence;\n           ^\neditor.c:14:36: error: too few arguments provided to function-like macro invocation\n     char* rec = strsep (& sentence);\n                                   ^\n/usr/include/bits/string2.h:1262:11: note: macro 'strsep' defined here\n#  define strsep(s, reject) __strsep (s, reject)\n          ^\neditor.c:16:22: error: too many arguments to function call, expected 2, have 3\n     strcpy(com,rec, \"\\0\"));\n     ~~~~~~          ^~~~\neditor.c:42:34: error: expected ';' at end of declaration\n        char* com=strsep(&sentence,\"\\0\")\n                                        ^\n                                        ;\neditor.c:47:3: error: implicit declaration of function 'sresep' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n                sresep(&sentence,\"\\0\");\n                ^\neditor.c:47:3: note: did you mean 'strsep'?\n/usr/include/string.h:552:14: note: 'strsep' declared here\nextern char *strsep (char **__restrict __stringp,\n             ^\neditor.c:73:11: error: expected ';' after return statement\nreturn i<j:i,j;\n          ^\n          ;\neditor.c:76:12: error: expected ';' after return statement\n        return i>j:i,j;\n                  ^\n                  ;\neditor.c:88:12: error: incompatible pointer types passing 'size_t **' (aka 'unsigned long **') to parameter of type 'size_t *' (aka 'unsigned long *'); remove & [-Werror,-Wincompatible-pointer-types]\n        split(com,&line,copy);\n                  ^~~~~\neditor.c:10:31: note: passing argument to parameter 'line' here\nvoid split(char* com, size_t* line, char* sentence) {\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:813:29: note: expanded from macro 'strcmp'\n            && (__s2_len = strlen (s2), __s2_len < 4)                         \\\n                                   ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:815:33: note: expanded from macro 'strcmp'\n               ? __builtin_strcmp (s1, s2)                                    \\\n                                       ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:817:30: note: expanded from macro 'strcmp'\n            : __builtin_strcmp (s1, s2)))); })\n                                    ^\neditor.c:94:35: error: no member named 'Vector' in 'Document'; did you mean 'vector'?\n                for(size_t i = 0; i < document->Vector->size; i++)\n                                                ^~~~~~\n                                                vector\n./includes/document.h:5:26: note: 'vector' declared here\ntypedef struct { Vector *vector; } Document;\n                         ^\neditor.c:96:15: error: use of undeclared identifier 'documnet'; did you mean 'document'?\n                        print_line(documnet,i); //print them all\n                                   ^~~~~~~~\n                                   document\neditor.c:78:39: note: 'document' declared here\nvoid handle_display_command(Document *document, const char *command) {\n                                      ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/editor-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "printing_test", 
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nFAILED TO COMPILE!\neditor.c:14:12: error: redefinition of 'rec'\n     char* rec = strsep (& sentence);\n           ^\neditor.c:11:12: note: previous definition is here\n     char* rec = sentence;\n           ^\neditor.c:14:36: error: too few arguments provided to function-like macro invocation\n     char* rec = strsep (& sentence);\n                                   ^\n/usr/include/bits/string2.h:1262:11: note: macro 'strsep' defined here\n#  define strsep(s, reject) __strsep (s, reject)\n          ^\neditor.c:16:22: error: too many arguments to function call, expected 2, have 3\n     strcpy(com,rec, \"\\0\"));\n     ~~~~~~          ^~~~\neditor.c:42:34: error: expected ';' at end of declaration\n        char* com=strsep(&sentence,\"\\0\")\n                                        ^\n                                        ;\neditor.c:47:3: error: implicit declaration of function 'sresep' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n                sresep(&sentence,\"\\0\");\n                ^\neditor.c:47:3: note: did you mean 'strsep'?\n/usr/include/string.h:552:14: note: 'strsep' declared here\nextern char *strsep (char **__restrict __stringp,\n             ^\neditor.c:73:11: error: expected ';' after return statement\nreturn i<j:i,j;\n          ^\n          ;\neditor.c:76:12: error: expected ';' after return statement\n        return i>j:i,j;\n                  ^\n                  ;\neditor.c:88:12: error: incompatible pointer types passing 'size_t **' (aka 'unsigned long **') to parameter of type 'size_t *' (aka 'unsigned long *'); remove & [-Werror,-Wincompatible-pointer-types]\n        split(com,&line,copy);\n                  ^~~~~\neditor.c:10:31: note: passing argument to parameter 'line' here\nvoid split(char* com, size_t* line, char* sentence) {\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:813:29: note: expanded from macro 'strcmp'\n            && (__s2_len = strlen (s2), __s2_len < 4)                         \\\n                                   ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:815:33: note: expanded from macro 'strcmp'\n               ? __builtin_strcmp (s1, s2)                                    \\\n                                       ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:817:30: note: expanded from macro 'strcmp'\n            : __builtin_strcmp (s1, s2)))); })\n                                    ^\neditor.c:94:35: error: no member named 'Vector' in 'Document'; did you mean 'vector'?\n                for(size_t i = 0; i < document->Vector->size; i++)\n                                                ^~~~~~\n                                                vector\n./includes/document.h:5:26: note: 'vector' declared here\ntypedef struct { Vector *vector; } Document;\n                         ^\neditor.c:96:15: error: use of undeclared identifier 'documnet'; did you mean 'document'?\n                        print_line(documnet,i); //print them all\n                                   ^~~~~~~~\n                                   document\neditor.c:78:39: note: 'document' declared here\nvoid handle_display_command(Document *document, const char *command) {\n                                      ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/editor-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "find_test", 
        "log": "Find a line after writing them\nTrying to compile your code...\nFAILED TO COMPILE!\neditor.c:14:12: error: redefinition of 'rec'\n     char* rec = strsep (& sentence);\n           ^\neditor.c:11:12: note: previous definition is here\n     char* rec = sentence;\n           ^\neditor.c:14:36: error: too few arguments provided to function-like macro invocation\n     char* rec = strsep (& sentence);\n                                   ^\n/usr/include/bits/string2.h:1262:11: note: macro 'strsep' defined here\n#  define strsep(s, reject) __strsep (s, reject)\n          ^\neditor.c:16:22: error: too many arguments to function call, expected 2, have 3\n     strcpy(com,rec, \"\\0\"));\n     ~~~~~~          ^~~~\neditor.c:42:34: error: expected ';' at end of declaration\n        char* com=strsep(&sentence,\"\\0\")\n                                        ^\n                                        ;\neditor.c:47:3: error: implicit declaration of function 'sresep' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n                sresep(&sentence,\"\\0\");\n                ^\neditor.c:47:3: note: did you mean 'strsep'?\n/usr/include/string.h:552:14: note: 'strsep' declared here\nextern char *strsep (char **__restrict __stringp,\n             ^\neditor.c:73:11: error: expected ';' after return statement\nreturn i<j:i,j;\n          ^\n          ;\neditor.c:76:12: error: expected ';' after return statement\n        return i>j:i,j;\n                  ^\n                  ;\neditor.c:88:12: error: incompatible pointer types passing 'size_t **' (aka 'unsigned long **') to parameter of type 'size_t *' (aka 'unsigned long *'); remove & [-Werror,-Wincompatible-pointer-types]\n        split(com,&line,copy);\n                  ^~~~~\neditor.c:10:31: note: passing argument to parameter 'line' here\nvoid split(char* com, size_t* line, char* sentence) {\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:813:29: note: expanded from macro 'strcmp'\n            && (__s2_len = strlen (s2), __s2_len < 4)                         \\\n                                   ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:815:33: note: expanded from macro 'strcmp'\n               ? __builtin_strcmp (s1, s2)                                    \\\n                                       ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:817:30: note: expanded from macro 'strcmp'\n            : __builtin_strcmp (s1, s2)))); })\n                                    ^\neditor.c:94:35: error: no member named 'Vector' in 'Document'; did you mean 'vector'?\n                for(size_t i = 0; i < document->Vector->size; i++)\n                                                ^~~~~~\n                                                vector\n./includes/document.h:5:26: note: 'vector' declared here\ntypedef struct { Vector *vector; } Document;\n                         ^\neditor.c:96:15: error: use of undeclared identifier 'documnet'; did you mean 'document'?\n                        print_line(documnet,i); //print them all\n                                   ^~~~~~~~\n                                   document\neditor.c:78:39: note: 'document' declared here\nvoid handle_display_command(Document *document, const char *command) {\n                                      ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/editor-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "find_test_multiple_exist", 
        "log": "Find multiple lines with a given key after writing them\nTrying to compile your code...\nFAILED TO COMPILE!\neditor.c:14:12: error: redefinition of 'rec'\n     char* rec = strsep (& sentence);\n           ^\neditor.c:11:12: note: previous definition is here\n     char* rec = sentence;\n           ^\neditor.c:14:36: error: too few arguments provided to function-like macro invocation\n     char* rec = strsep (& sentence);\n                                   ^\n/usr/include/bits/string2.h:1262:11: note: macro 'strsep' defined here\n#  define strsep(s, reject) __strsep (s, reject)\n          ^\neditor.c:16:22: error: too many arguments to function call, expected 2, have 3\n     strcpy(com,rec, \"\\0\"));\n     ~~~~~~          ^~~~\neditor.c:42:34: error: expected ';' at end of declaration\n        char* com=strsep(&sentence,\"\\0\")\n                                        ^\n                                        ;\neditor.c:47:3: error: implicit declaration of function 'sresep' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n                sresep(&sentence,\"\\0\");\n                ^\neditor.c:47:3: note: did you mean 'strsep'?\n/usr/include/string.h:552:14: note: 'strsep' declared here\nextern char *strsep (char **__restrict __stringp,\n             ^\neditor.c:73:11: error: expected ';' after return statement\nreturn i<j:i,j;\n          ^\n          ;\neditor.c:76:12: error: expected ';' after return statement\n        return i>j:i,j;\n                  ^\n                  ;\neditor.c:88:12: error: incompatible pointer types passing 'size_t **' (aka 'unsigned long **') to parameter of type 'size_t *' (aka 'unsigned long *'); remove & [-Werror,-Wincompatible-pointer-types]\n        split(com,&line,copy);\n                  ^~~~~\neditor.c:10:31: note: passing argument to parameter 'line' here\nvoid split(char* com, size_t* line, char* sentence) {\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:813:29: note: expanded from macro 'strcmp'\n            && (__s2_len = strlen (s2), __s2_len < 4)                         \\\n                                   ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:815:33: note: expanded from macro 'strcmp'\n               ? __builtin_strcmp (s1, s2)                                    \\\n                                       ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:817:30: note: expanded from macro 'strcmp'\n            : __builtin_strcmp (s1, s2)))); })\n                                    ^\neditor.c:94:35: error: no member named 'Vector' in 'Document'; did you mean 'vector'?\n                for(size_t i = 0; i < document->Vector->size; i++)\n                                                ^~~~~~\n                                                vector\n./includes/document.h:5:26: note: 'vector' declared here\ntypedef struct { Vector *vector; } Document;\n                         ^\neditor.c:96:15: error: use of undeclared identifier 'documnet'; did you mean 'document'?\n                        print_line(documnet,i); //print them all\n                                   ^~~~~~~~\n                                   document\neditor.c:78:39: note: 'document' declared here\nvoid handle_display_command(Document *document, const char *command) {\n                                      ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/editor-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "memory_check", 
        "log": "Check for no memeory leaks\nTrying to compile your code...\nFAILED TO COMPILE!\neditor.c:14:12: error: redefinition of 'rec'\n     char* rec = strsep (& sentence);\n           ^\neditor.c:11:12: note: previous definition is here\n     char* rec = sentence;\n           ^\neditor.c:14:36: error: too few arguments provided to function-like macro invocation\n     char* rec = strsep (& sentence);\n                                   ^\n/usr/include/bits/string2.h:1262:11: note: macro 'strsep' defined here\n#  define strsep(s, reject) __strsep (s, reject)\n          ^\neditor.c:16:22: error: too many arguments to function call, expected 2, have 3\n     strcpy(com,rec, \"\\0\"));\n     ~~~~~~          ^~~~\neditor.c:42:34: error: expected ';' at end of declaration\n        char* com=strsep(&sentence,\"\\0\")\n                                        ^\n                                        ;\neditor.c:47:3: error: implicit declaration of function 'sresep' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n                sresep(&sentence,\"\\0\");\n                ^\neditor.c:47:3: note: did you mean 'strsep'?\n/usr/include/string.h:552:14: note: 'strsep' declared here\nextern char *strsep (char **__restrict __stringp,\n             ^\neditor.c:73:11: error: expected ';' after return statement\nreturn i<j:i,j;\n          ^\n          ;\neditor.c:76:12: error: expected ';' after return statement\n        return i>j:i,j;\n                  ^\n                  ;\neditor.c:88:12: error: incompatible pointer types passing 'size_t **' (aka 'unsigned long **') to parameter of type 'size_t *' (aka 'unsigned long *'); remove & [-Werror,-Wincompatible-pointer-types]\n        split(com,&line,copy);\n                  ^~~~~\neditor.c:10:31: note: passing argument to parameter 'line' here\nvoid split(char* com, size_t* line, char* sentence) {\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:813:29: note: expanded from macro 'strcmp'\n            && (__s2_len = strlen (s2), __s2_len < 4)                         \\\n                                   ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:815:33: note: expanded from macro 'strcmp'\n               ? __builtin_strcmp (s1, s2)                                    \\\n                                       ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:817:30: note: expanded from macro 'strcmp'\n            : __builtin_strcmp (s1, s2)))); })\n                                    ^\neditor.c:94:35: error: no member named 'Vector' in 'Document'; did you mean 'vector'?\n                for(size_t i = 0; i < document->Vector->size; i++)\n                                                ^~~~~~\n                                                vector\n./includes/document.h:5:26: note: 'vector' declared here\ntypedef struct { Vector *vector; } Document;\n                         ^\neditor.c:96:15: error: use of undeclared identifier 'documnet'; did you mean 'document'?\n                        print_line(documnet,i); //print them all\n                                   ^~~~~~~~\n                                   document\neditor.c:78:39: note: 'document' declared here\nvoid handle_display_command(Document *document, const char *command) {\n                                      ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/editor-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "load_test", 
        "log": "Loading in a file and check the contents\nTrying to compile your code...\nFAILED TO COMPILE!\neditor.c:14:12: error: redefinition of 'rec'\n     char* rec = strsep (& sentence);\n           ^\neditor.c:11:12: note: previous definition is here\n     char* rec = sentence;\n           ^\neditor.c:14:36: error: too few arguments provided to function-like macro invocation\n     char* rec = strsep (& sentence);\n                                   ^\n/usr/include/bits/string2.h:1262:11: note: macro 'strsep' defined here\n#  define strsep(s, reject) __strsep (s, reject)\n          ^\neditor.c:16:22: error: too many arguments to function call, expected 2, have 3\n     strcpy(com,rec, \"\\0\"));\n     ~~~~~~          ^~~~\neditor.c:42:34: error: expected ';' at end of declaration\n        char* com=strsep(&sentence,\"\\0\")\n                                        ^\n                                        ;\neditor.c:47:3: error: implicit declaration of function 'sresep' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n                sresep(&sentence,\"\\0\");\n                ^\neditor.c:47:3: note: did you mean 'strsep'?\n/usr/include/string.h:552:14: note: 'strsep' declared here\nextern char *strsep (char **__restrict __stringp,\n             ^\neditor.c:73:11: error: expected ';' after return statement\nreturn i<j:i,j;\n          ^\n          ;\neditor.c:76:12: error: expected ';' after return statement\n        return i>j:i,j;\n                  ^\n                  ;\neditor.c:88:12: error: incompatible pointer types passing 'size_t **' (aka 'unsigned long **') to parameter of type 'size_t *' (aka 'unsigned long *'); remove & [-Werror,-Wincompatible-pointer-types]\n        split(com,&line,copy);\n                  ^~~~~\neditor.c:10:31: note: passing argument to parameter 'line' here\nvoid split(char* com, size_t* line, char* sentence) {\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:813:29: note: expanded from macro 'strcmp'\n            && (__s2_len = strlen (s2), __s2_len < 4)                         \\\n                                   ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:815:33: note: expanded from macro 'strcmp'\n               ? __builtin_strcmp (s1, s2)                                    \\\n                                       ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:817:30: note: expanded from macro 'strcmp'\n            : __builtin_strcmp (s1, s2)))); })\n                                    ^\neditor.c:94:35: error: no member named 'Vector' in 'Document'; did you mean 'vector'?\n                for(size_t i = 0; i < document->Vector->size; i++)\n                                                ^~~~~~\n                                                vector\n./includes/document.h:5:26: note: 'vector' declared here\ntypedef struct { Vector *vector; } Document;\n                         ^\neditor.c:96:15: error: use of undeclared identifier 'documnet'; did you mean 'document'?\n                        print_line(documnet,i); //print them all\n                                   ^~~~~~~~\n                                   document\neditor.c:78:39: note: 'document' declared here\nvoid handle_display_command(Document *document, const char *command) {\n                                      ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/editor-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "saving_test", 
        "log": "Check contents of a file after saving them to disk\nTrying to compile your code...\nFAILED TO COMPILE!\neditor.c:14:12: error: redefinition of 'rec'\n     char* rec = strsep (& sentence);\n           ^\neditor.c:11:12: note: previous definition is here\n     char* rec = sentence;\n           ^\neditor.c:14:36: error: too few arguments provided to function-like macro invocation\n     char* rec = strsep (& sentence);\n                                   ^\n/usr/include/bits/string2.h:1262:11: note: macro 'strsep' defined here\n#  define strsep(s, reject) __strsep (s, reject)\n          ^\neditor.c:16:22: error: too many arguments to function call, expected 2, have 3\n     strcpy(com,rec, \"\\0\"));\n     ~~~~~~          ^~~~\neditor.c:42:34: error: expected ';' at end of declaration\n        char* com=strsep(&sentence,\"\\0\")\n                                        ^\n                                        ;\neditor.c:47:3: error: implicit declaration of function 'sresep' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n                sresep(&sentence,\"\\0\");\n                ^\neditor.c:47:3: note: did you mean 'strsep'?\n/usr/include/string.h:552:14: note: 'strsep' declared here\nextern char *strsep (char **__restrict __stringp,\n             ^\neditor.c:73:11: error: expected ';' after return statement\nreturn i<j:i,j;\n          ^\n          ;\neditor.c:76:12: error: expected ';' after return statement\n        return i>j:i,j;\n                  ^\n                  ;\neditor.c:88:12: error: incompatible pointer types passing 'size_t **' (aka 'unsigned long **') to parameter of type 'size_t *' (aka 'unsigned long *'); remove & [-Werror,-Wincompatible-pointer-types]\n        split(com,&line,copy);\n                  ^~~~~\neditor.c:10:31: note: passing argument to parameter 'line' here\nvoid split(char* com, size_t* line, char* sentence) {\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:813:29: note: expanded from macro 'strcmp'\n            && (__s2_len = strlen (s2), __s2_len < 4)                         \\\n                                   ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:815:33: note: expanded from macro 'strcmp'\n               ? __builtin_strcmp (s1, s2)                                    \\\n                                       ^\neditor.c:93:17: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        if( strcmp(com,'p')==0 && line == NULL) {\n                       ^~~\n/usr/include/bits/string2.h:817:30: note: expanded from macro 'strcmp'\n            : __builtin_strcmp (s1, s2)))); })\n                                    ^\neditor.c:94:35: error: no member named 'Vector' in 'Document'; did you mean 'vector'?\n                for(size_t i = 0; i < document->Vector->size; i++)\n                                                ^~~~~~\n                                                vector\n./includes/document.h:5:26: note: 'vector' declared here\ntypedef struct { Vector *vector; } Document;\n                         ^\neditor.c:96:15: error: use of undeclared identifier 'documnet'; did you mean 'document'?\n                        print_line(documnet,i); //print them all\n                                   ^~~~~~~~\n                                   document\neditor.c:78:39: note: 'document' declared here\nvoid handle_display_command(Document *document, const char *command) {\n                                      ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:803:54: note: expanded from macro 'strcmp'\n      && (__s1_len = strlen (s1), __s2_len = strlen (s2),                     \\\n                                                     ^\n/usr/include/string.h:394:35: note: passing argument to parameter '__s' here\nextern size_t strlen (const char *__s)\n                                  ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:806:31: note: expanded from macro 'strcmp'\n      ? __builtin_strcmp (s1, s2)                                             \\\n                              ^\neditor.c:99:24: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]\n        } else if(strcmp(com, 'p')==0 && line !=NULL && line!=0){\n                              ^~~\n/usr/include/bits/string2.h:810:30: note: expanded from macro 'strcmp'\n            ? __builtin_strcmp (s1, s2)                                       \\\n                                    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/editor-release.o] Error 1\n"
      }
    ], 
    "revision": "{2016-02-15}"
  }, 
  {
    "timestamp": "2016-02-14 21:02:26.903613", 
    "testcases": [
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Attempt to write a line\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "writing_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Try to append to a line after writing\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Try to delete a line after writing\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "multiple_writing_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "overwriting_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "printf_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "printing_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 0.0, 
        "log": "Find a line after writing them\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "find_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 0.0, 
        "log": "Find multiple lines with a given key after writing them\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "find_test_multiple_exist", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 0.0, 
        "log": "Check for no memeory leaks\nTrying to compile your code...\nSuccessfully compiled your code..\nMEMORY ERROR/LEAK!", 
        "name": "memory_check", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Loading in a file and check the contents\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "load_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Check contents of a file after saving them to disk\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "saving_test", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-15}"
  }, 
  {
    "timestamp": "2016-02-15 13:57:15.816515", 
    "testcases": [
      {
        "log": "Attempt to write a line\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "writing_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Try to append to a line after writing\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Try to delete a line after writing\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "delete_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "multiple_writing_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "overwriting_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "printf_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "printing_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Find a line after writing them\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "find_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Find multiple lines with a given key after writing them\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "find_test_multiple_exist", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Check for no memeory leaks\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "memory_check", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Loading in a file and check the contents\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "load_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Check contents of a file after saving them to disk\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "saving_test", 
        "description": "DEFAULT DESCRIPTION"
      }
    ], 
    "revision": "{2016-02-15}"
  }, 
  {
    "timestamp": "2016-02-15 14:55:16.921873", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "writing_test", 
        "log": "Attempt to write a line\nTrying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "append_test", 
        "log": "Try to append to a line after writing\nTrying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "delete_test", 
        "log": "Try to delete a line after writing\nTrying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "multiple_writing_test", 
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "overwriting_test", 
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "printf_test", 
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "printing_test", 
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "find_test", 
        "log": "Find a line after writing them\nTrying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "find_test_multiple_exist", 
        "log": "Find multiple lines with a given key after writing them\nTrying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "memory_check", 
        "log": "Check for no memeory leaks\nTrying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "load_test", 
        "log": "Loading in a file and check the contents\nTrying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "DEFAULT DESCRIPTION", 
        "name": "saving_test", 
        "log": "Check contents of a file after saving them to disk\nTrying to compile your code...\nSuccessfully compiled your code.."
      }
    ], 
    "revision": "{2016-02-16}"
  }, 
  {
    "timestamp": "2016-02-15 20:00:33.189611", 
    "testcases": [
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Attempt to write a line\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "writing_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Try to append to a line after writing\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Try to delete a line after writing\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "multiple_writing_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "overwriting_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "printf_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "printing_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Find a line after writing them\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "find_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Find multiple lines with a given key after writing them\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "find_test_multiple_exist", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Check for no memeory leaks\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "memory_check", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Loading in a file and check the contents\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "load_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "DEFAULT DESCRIPTION", 
        "ptsEarned": 1.0, 
        "log": "Check contents of a file after saving them to disk\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "name": "saving_test", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-16}"
  }, 
  {
    "timestamp": "2016-02-16 10:23:59.976500", 
    "testcases": [
      {
        "log": "Attempt to write a line\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "writing_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Try to append to a line after writing\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Try to delete a line after writing\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "delete_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "multiple_writing_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Attempt to write multiple lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "overwriting_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "printf_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Check the format of printing after writing lines\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "printing_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Find a line after writing them\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "find_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Find multiple lines with a given key after writing them\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "find_test_multiple_exist", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Check for no memeory leaks\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "memory_check", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Loading in a file and check the contents\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "load_test", 
        "description": "DEFAULT DESCRIPTION"
      }, 
      {
        "log": "Check contents of a file after saving them to disk\nTrying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "saving_test", 
        "description": "DEFAULT DESCRIPTION"
      }
    ], 
    "revision": "{2016-02-16}"
  }
]